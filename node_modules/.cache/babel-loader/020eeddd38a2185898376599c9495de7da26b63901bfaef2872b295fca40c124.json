{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: ' cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemsToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://practice-project-aa89e-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending Cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Sent cart data failed!'\n      }));\n    }\n    ;\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemsToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["D:/Coding Projects/adv redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";  \r\n\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({ \r\n    name: ' cart' ,\r\n    initialState: { \r\n        items: [], \r\n        totalQuantity: 0, \r\n    }, \r\n    reducers: {  \r\n        addItemsToCart(state, action){ \r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if (!existingItem){ \r\n                state.items.push({ \r\n                    id: newItem.id,\r\n                    price : newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title \r\n                }); \r\n            }else { \r\n                existingItem.quantity = existingItem.quantity + 1; \r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        }, \r\n        removeItemFromCart(state, action){ \r\n            const id = action.payload; \r\n            const existingItem = state.items.find(item => item.id === id); \r\n            state.totalQuantity--; \r\n            if (existingItem.quantity ===1) {\r\n                state.items = state.items.filter(item => item.id !== id); \r\n            } else { \r\n                existingItem.quantity--; \r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n\r\n    }\r\n}); \r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => { \r\n        dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data!'\r\n          })\r\n        );   \r\n\r\n        const sendRequest = async () => { \r\n\r\n            const response = await fetch('https://practice-project-aa89e-default-rtdb.firebaseio.com/cart.json', { \r\n                method: 'PUT', \r\n                body: JSON.stringify(cart),\r\n              }); \r\n            \r\n              if(!response.ok) { \r\n                throw new Error('Sending Cart data failed')\r\n              } \r\n        };\r\n\r\n\r\n        try{\r\n        await sendRequest();\r\n\r\n        dispatch(uiActions.showNotification({\r\n                    status: 'success',\r\n                    title: 'Success...',\r\n                    message: 'Sent cart data successfully!'\r\n                })\r\n                );\r\n        }catch (error) { \r\n        \r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error',\r\n                message: 'Sent cart data failed!',\r\n              })\r\n            );\r\n        };\r\n       \r\n       \r\n\r\n         \r\n        \r\n    };\r\n}\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACO,YAAY,EAAC;QACdJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAGP,OAAO,CAACO,KAAK;UACrBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBf,IAAI,EAAEQ,OAAO,CAACU;QAClB,CAAC,CAAC;MACN,CAAC,MAAK;QACFR,YAAY,CAACM,QAAQ,GAAGN,YAAY,CAACM,QAAQ,GAAG,CAAC;QACjDN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACO,KAAK;MACrE;IACJ,CAAC;IACDI,kBAAkBA,CAACb,KAAK,EAAEC,MAAM,EAAC;MAC7B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAIO,YAAY,CAACM,QAAQ,KAAI,CAAC,EAAE;QAC5BV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMM,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAACzB,SAAS,CAAC0B,gBAAgB,CAAC;MAChCC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,YAAY;MACnBQ,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sEAAsE,EAAE;QACjGC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAG,CAACM,QAAQ,CAACM,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACN,CAAC;IAGD,IAAG;MACH,MAAMR,WAAW,CAAC,CAAC;MAEnBJ,QAAQ,CAACzB,SAAS,CAAC0B,gBAAgB,CAAC;QACxBC,MAAM,EAAE,SAAS;QACjBP,KAAK,EAAE,YAAY;QACnBQ,OAAO,EAAE;MACb,CAAC,CACD,CAAC;IACT,CAAC,QAAOU,KAAK,EAAE;MAEXb,QAAQ,CAACzB,SAAS,CAAC0B,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfP,KAAK,EAAE,OAAO;QACdQ,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACL;IAAC;EAML,CAAC;AACL,CAAC;AACD,OAAO,MAAMW,WAAW,GAAGtC,SAAS,CAACuC,OAAO;AAE5C,eAAevC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}